package com.cdac.project.attendancemanagement.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cdac.project.attendancemanagement.dto.AttendanceDTO;
import com.cdac.project.attendancemanagement.model.Attendance;
import com.cdac.project.attendancemanagement.service.AttendanceService;



@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/attendance")
public class AttendanceController {
    @Autowired
    private AttendanceService attendanceService;

//    @PostMapping("/mark")
//    public ResponseEntity<Attendance> markAttendance(@RequestBody Attendance attendance) {
//    	Long session = attendance.getSession().getId();
//        Long studentId = attendance.getStudent().getSId();
//        boolean present = attendance.isPresent();
// 	
//    	Attendance att = attendanceService.markAttendance(session,studentId, present);
//        
//        
//        return ResponseEntity.status(HttpStatus.CREATED).body(att);
//       
////        return ResponseEntity.ok("Attendance marked successfully");
//    }
    
    
    
//    @PostMapping("/markAttendance")
//    public ResponseEntity<String> markAttendance(@RequestBody List<AttendanceDTO> attendanceData) {
//        try {
//            attendanceService.markAttendance(attendanceData);
//            return ResponseEntity.ok("Attendance marked successfully!");
//        } catch (Exception e) {
//            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
//                    .body("Failed to mark attendance. Error: " + e.getMessage());
//        }
//    }
    
    
   // public List<Attendance> getAttendanceBySessionId(Long sessionId) {
//		
//		return trepo.findBySessionId(sessionId);
//	}
    	@GetMapping("/attendance/{sessionId}")
      public List<Attendance> getAttendanceBySessionId(@PathVariable Long sessionId) {
          return attendanceService.getAttendanceBySessionId(sessionId);
      }
 
    	
    	
    	
    	@GetMapping("/viewAttendance")
        public ResponseEntity<List<Attendance>> getAllAttendance() {
            try {
                List<Attendance> attendanceList = attendanceService.getAllAttendance();
                if (attendanceList.isEmpty()) {
                    return ResponseEntity.noContent().build(); // No content found
                }
                return ResponseEntity.ok(attendanceList);
            } catch (Exception e) {
                return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body(null); // Or any other error handling mechanism
            }
        }
    	
    	@PostMapping("/markAttendance")
    	public ResponseEntity<String> markAttendance(@Validated @RequestBody List<AttendanceDTO> attendanceData) {
    	    try {
    	        attendanceService.markAttendance(attendanceData);
    	        return ResponseEntity.ok("Attendance marked successfully!");
    	    } catch (Exception e) {
    	        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
    	                .body("Failed to mark attendance. Error: " + e.getMessage());
    	    }
    	}

}

