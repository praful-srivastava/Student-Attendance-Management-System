package com.cdac.project.attendancemanagement.controller;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cdac.project.attendancemanagement.exception.ResourceNotFoundException;
import com.cdac.project.attendancemanagement.model.Session;
import com.cdac.project.attendancemanagement.model.Teacher;
import com.cdac.project.attendancemanagement.service.TeacherService;

@RestController
@RequestMapping(value="/api/teacher")
public class TeacherController {
	
	@Autowired
	private TeacherService tservice;
	
	@PostMapping("/register")
	public ResponseEntity<String> addTeacher(@Validated @RequestBody Teacher teacher){
		try {
			Session session = teacher.getSession();
			
			session.setTeacher(teacher);
			teacher.setSession(session);
			
			Teacher registerTeacher = tservice.registerteacher(teacher);
			if(registerTeacher != null) {
				return ResponseEntity.ok("Registeration Successful");
			}
			else {
				return ResponseEntity.badRequest().body("Registeration failed");
			}
		}
		catch(Exception e){
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
					.body("An Error Occurred"+ e.getMessage());
		}
	}
	
	@PostMapping("/login")
	public ResponseEntity<Boolean> loginTeacher(@Validated @RequestBody Teacher teacher) throws ResourceNotFoundException{
		Boolean isAuthenticated = false;
		String email = teacher.getEmail();
		String password = teacher.getPassword();
		
		Teacher t = tservice.loginTeacher(email).orElseThrow();
		if(email.equals(t.getEmail()) && password.equals(t.getPassword())) {
			isAuthenticated = true;
		}
		return ResponseEntity.ok(isAuthenticated);
	}
	
	
	
	
}
